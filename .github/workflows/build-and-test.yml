name: Build and Test TALauncher

on:
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  pull-requests: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Setup environment
      run: |
        # Disable git status check for CI
        export SKIP_GIT_STATUS_CHECK=true
        echo "SKIP_GIT_STATUS_CHECK=true" >> $GITHUB_ENV

    - name: Run unit tests
      run: ./gradlew test --no-daemon --stacktrace

    - name: Build debug APK
      run: ./gradlew assembleDebug --no-daemon --stacktrace

    - name: Build UI tests APK
      run: ./gradlew :uitests:assembleDebugAndroidTest --no-daemon --stacktrace

    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30

    - name: Upload UI test APK
      uses: actions/upload-artifact@v4
      with:
        name: ui-test-apk
        path: uitests/build/outputs/apk/androidTest/debug/uitests-debug-androidTest.apk
        retention-days: 30

    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports
        path: |
          app/build/reports/tests/
          uitests/build/reports/tests/
          app/build/test-results/
          uitests/build/test-results/
        retention-days: 30

    - name: Upload lint reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-reports
        path: |
          app/build/reports/lint-*.html
          uitests/build/reports/lint-*.html
        retention-days: 30

    - name: Comment on PR with APK download links
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          try {
            const runId = context.runId;
            const repo = context.repo;

            const comment = `## ðŸ“± APK Build Artifacts

            The debug APK has been built successfully! You can download it from the workflow artifacts:

            **ðŸ”— [Download Debug APK](https://github.com/${repo.owner}/${repo.repo}/actions/runs/${runId})**

            ### Available Downloads:
            - **debug-apk**: Main application debug build
            - **ui-test-apk**: UI test APK for testing
            - **test-reports**: Unit test results
            - **lint-reports**: Code quality reports

            *Note: You need to be logged into GitHub to download artifacts. Artifacts expire after 30 days.*`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: repo.owner,
              repo: repo.repo,
              body: comment
            });

            console.log('Successfully added PR comment with download links');
          } catch (error) {
            console.log('Unable to comment on PR (likely due to permissions):', error.message);
            console.log('Build artifacts are still available in the Actions tab');
          }

  instrumentation-tests:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Setup environment
      run: |
        # Disable git status check for CI
        export SKIP_GIT_STATUS_CHECK=true
        echo "SKIP_GIT_STATUS_CHECK=true" >> $GITHUB_ENV

    - name: Start Android Emulator and run UI tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        target: default
        arch: x86_64
        profile: Nexus 6
        script: ./gradlew connectedAndroidTest --no-daemon --stacktrace

    - name: Upload UI test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ui-test-reports
        path: |
          app/build/reports/androidTests/
          uitests/build/reports/androidTests/
        retention-days: 30